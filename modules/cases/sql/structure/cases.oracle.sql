CREATE SEQUENCE CASE_ID_SEQ
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE TABLE CASES
(
  CASE_ID                INTEGER                NOT NULL,
  CASE_LABEL             VARCHAR2(255 BYTE)    ,
  CASE_DESCRIPTION       VARCHAR2(255 BYTE),
  CASE_TYPE              VARCHAR2(32 BYTE),
  CASE_CLOSING_DATE      DATE,
  CASE_LAST_UPDATE_DATE  DATE,
  CASE_CREATION_DATE     DATE           DEFAULT sysdate,
  CASE_TYPIST            VARCHAR2(32 BYTE)     ,
  CASE_PARENT            INTEGER,
  CASE_CUSTOM_T1         VARCHAR2(255 BYTE),
  CASE_CUSTOM_T2         VARCHAR2(255 BYTE),
  CASE_CUSTOM_T3         VARCHAR2(255 BYTE),
  CASE_CUSTOM_T4         VARCHAR2(255 BYTE)
)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE CASES_RES
(
  CASE_ID  INTEGER                              NOT NULL,
  RES_ID   INTEGER                              NOT NULL
)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE OR REPLACE TRIGGER t_cases_ins
   BEFORE INSERT
   ON cases
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
BEGIN
   SELECT case_id_seq.NEXTVAL
     INTO :NEW.case_id
     FROM DUAL;
EXCEPTION
   WHEN OTHERS
   THEN
      RAISE;
END  t_cases_ins;
/
SHOW ERRORS;


ALTER TABLE CASES ADD (
  CONSTRAINT CASES_PKEY
 PRIMARY KEY
 (CASE_ID));

ALTER TABLE CASES_RES ADD (
  CONSTRAINT CASES_RES_PKEY
 PRIMARY KEY
 (CASE_ID, RES_ID));